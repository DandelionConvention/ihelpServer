<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.services.products.ihelp.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.services.products.ihelp.dao.domain.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="CHAR" property="openid" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="role" jdbcType="TINYINT" property="role" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="expiration" jdbcType="DATE" property="expiration" />
    <result column="id_number" jdbcType="CHAR" property="idNumber" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="integral" jdbcType="DECIMAL" property="integral" />
    <result column="credit_score" jdbcType="INTEGER" property="creditScore" />
    <result column="service_times" jdbcType="INTEGER" property="serviceTimes" />
    <result column="enjoy_times" jdbcType="INTEGER" property="enjoyTimes" />
    <result column="commit_count" jdbcType="INTEGER" property="commitCount" />
    <result column="create_count" jdbcType="INTEGER" property="createCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, openid, `status`, `role`, `name`, gender, birthday, expiration, id_number, nickname, 
    signature, photo, avatar, phone, integral, credit_score, service_times, enjoy_times, 
    commit_count, create_count, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.services.products.ihelp.dao.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.services.products.ihelp.dao.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.services.products.ihelp.dao.domain.User">
    insert into user (id, openid, `status`, 
      `role`, `name`, gender, 
      birthday, expiration, id_number, 
      nickname, signature, photo, 
      avatar, phone, integral, 
      credit_score, service_times, enjoy_times, 
      commit_count, create_count, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=CHAR}, #{status,jdbcType=TINYINT}, 
      #{role,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{birthday,jdbcType=DATE}, #{expiration,jdbcType=DATE}, #{idNumber,jdbcType=CHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{integral,jdbcType=DECIMAL}, 
      #{creditScore,jdbcType=INTEGER}, #{serviceTimes,jdbcType=INTEGER}, #{enjoyTimes,jdbcType=INTEGER}, 
      #{commitCount,jdbcType=INTEGER}, #{createCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.services.products.ihelp.dao.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="expiration != null">
        expiration,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="creditScore != null">
        credit_score,
      </if>
      <if test="serviceTimes != null">
        service_times,
      </if>
      <if test="enjoyTimes != null">
        enjoy_times,
      </if>
      <if test="commitCount != null">
        commit_count,
      </if>
      <if test="createCount != null">
        create_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="expiration != null">
        #{expiration,jdbcType=DATE},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=CHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=DECIMAL},
      </if>
      <if test="creditScore != null">
        #{creditScore,jdbcType=INTEGER},
      </if>
      <if test="serviceTimes != null">
        #{serviceTimes,jdbcType=INTEGER},
      </if>
      <if test="enjoyTimes != null">
        #{enjoyTimes,jdbcType=INTEGER},
      </if>
      <if test="commitCount != null">
        #{commitCount,jdbcType=INTEGER},
      </if>
      <if test="createCount != null">
        #{createCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.services.products.ihelp.dao.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.role != null">
        `role` = #{record.role,jdbcType=TINYINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.expiration != null">
        expiration = #{record.expiration,jdbcType=DATE},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=CHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.integral != null">
        integral = #{record.integral,jdbcType=DECIMAL},
      </if>
      <if test="record.creditScore != null">
        credit_score = #{record.creditScore,jdbcType=INTEGER},
      </if>
      <if test="record.serviceTimes != null">
        service_times = #{record.serviceTimes,jdbcType=INTEGER},
      </if>
      <if test="record.enjoyTimes != null">
        enjoy_times = #{record.enjoyTimes,jdbcType=INTEGER},
      </if>
      <if test="record.commitCount != null">
        commit_count = #{record.commitCount,jdbcType=INTEGER},
      </if>
      <if test="record.createCount != null">
        create_count = #{record.createCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      openid = #{record.openid,jdbcType=CHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      `role` = #{record.role,jdbcType=TINYINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=DATE},
      expiration = #{record.expiration,jdbcType=DATE},
      id_number = #{record.idNumber,jdbcType=CHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=CHAR},
      integral = #{record.integral,jdbcType=DECIMAL},
      credit_score = #{record.creditScore,jdbcType=INTEGER},
      service_times = #{record.serviceTimes,jdbcType=INTEGER},
      enjoy_times = #{record.enjoyTimes,jdbcType=INTEGER},
      commit_count = #{record.commitCount,jdbcType=INTEGER},
      create_count = #{record.createCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.services.products.ihelp.dao.domain.User">
    update user
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=CHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="expiration != null">
        expiration = #{expiration,jdbcType=DATE},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=CHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=DECIMAL},
      </if>
      <if test="creditScore != null">
        credit_score = #{creditScore,jdbcType=INTEGER},
      </if>
      <if test="serviceTimes != null">
        service_times = #{serviceTimes,jdbcType=INTEGER},
      </if>
      <if test="enjoyTimes != null">
        enjoy_times = #{enjoyTimes,jdbcType=INTEGER},
      </if>
      <if test="commitCount != null">
        commit_count = #{commitCount,jdbcType=INTEGER},
      </if>
      <if test="createCount != null">
        create_count = #{createCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.services.products.ihelp.dao.domain.User">
    update user
    set openid = #{openid,jdbcType=CHAR},
      `status` = #{status,jdbcType=TINYINT},
      `role` = #{role,jdbcType=TINYINT},
      `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      expiration = #{expiration,jdbcType=DATE},
      id_number = #{idNumber,jdbcType=CHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      integral = #{integral,jdbcType=DECIMAL},
      credit_score = #{creditScore,jdbcType=INTEGER},
      service_times = #{serviceTimes,jdbcType=INTEGER},
      enjoy_times = #{enjoyTimes,jdbcType=INTEGER},
      commit_count = #{commitCount,jdbcType=INTEGER},
      create_count = #{createCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>